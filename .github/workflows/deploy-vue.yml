name: deploy-vue
on:
  push:
    tags:
      - 'v*'
jobs:
  deploy-vue:
    runs-on: ubuntu-latest
    steps:
      - name: Extract version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
      - run: echo "ðŸŽ‰ The job was triggered by a ${{ github.event_name }} on commit ${{ github.SHA }}"

      - name: Check out repository code
        uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Upload to DO
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DO_SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - run: npm install -g yarn@1.22.17 # version? 1.22.17 -> 1.22.19 current
      - run: npm install -g lerna@3.22.1 # version? 3.22.1 -> 6.6.2 current
      - run: npm install -g typescript@4.5.5 # version? 4.5.5 -> 5.1.3 current
      - run: lerna bootstrap
      - name: Build
        run: |
          lerna bootstrap
          printf "${{ secrets.VUE_ENV }}" > ./packages/vue/.env.production
          cd ./packages/express
          yarn remove @types/jest
          cd ../..
          yarn build
      - name: Deploy /vue
        run: |
          ssh ${{ secrets.DO_USERNAME }}@eduquilt.com mkdir -p /home/skuilder/dist/vue/${{ steps.get_version.outputs.VERSION }}
          rsync -rl ./packages/vue/dist/ ${{ secrets.DO_USERNAME }}@eduquilt.com:/home/skuilder/dist/vue/${{ steps.get_version.outputs.VERSION }}
          ssh ${{ secrets.DO_USERNAME }}@eduquilt.com ln -sfn /home/skuilder/dist/vue/${{ steps.get_version.outputs.VERSION }} /home/skuilder/www
      - name: Zip Vue dist folder
        run: zip -r ./packages/vue/dist.zip ./packages/vue/dist
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./packages/vue/dist.zip
          asset_name: vue-dist-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip

      # todo: toss a buildinfo.md file into the (vcount+1) folder, linking PR, listing time, logging build errors, etc
